CREATE OR REPLACE TRIGGER T_DOCOUTPT_BDELETE_REPL_ARH
before delete on DOCOUTPT for each row
begin
/* регистрация события */
IF USER<>'SNP_REPL' THEN
  INSERT INTO PARUS.UPDATELIST (TABLENAME,TABLERN,AUTHID,MODIFDATE,OPERATION,NOTE)
  VALUES ('DOCOUTPT',:OLD.RN,USER,SYSDATE,'D',TO_CHAR(:OLD.DOCUMENT));
END IF;
end;
/

CREATE OR REPLACE TRIGGER T_DOCOUTPT_BINSERT_REPL_ARH
before insert on DOCOUTPT for each row
begin
/* регистрация события */
IF USER<>'SNP_REPL' THEN
  INSERT INTO PARUS.UPDATELIST (TABLENAME,TABLERN,AUTHID,MODIFDATE,OPERATION,NOTE)
  VALUES ('DOCOUTPT',:NEW.RN,USER,SYSDATE,'I',TO_CHAR(:NEW.DOCUMENT));
END IF;
end;
/

CREATE OR REPLACE TRIGGER T_DOCOUTPT_BUPDATE_REPL_ARH
before update on DOCOUTPT for each row
begin
/* регистрация события */
IF USER<>'SNP_REPL' THEN
  INSERT INTO PARUS.UPDATELIST (TABLENAME,TABLERN,AUTHID,MODIFDATE,OPERATION,NOTE)
  VALUES ('DOCOUTPT',:NEW.RN,USER,SYSDATE,'U',TO_CHAR(:NEW.DOCUMENT));
END IF;
end;
/

CREATE OR REPLACE TRIGGER T_DOCOUTPT_BUPDATE
before update on DOCOUTPT for each row
begin
/* проверка неизменности */
if ( :old.STATUS = :new.STATUS ) AND USER<>'SNP_REPL' then
P_EXCEPTION( 0,'Модификация записи таблицы DOCOUTPT недопустима.' );
end if;
end;
/
