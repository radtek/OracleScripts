CREATE OR REPLACE VIEW MASTER.V_LUKREP_SF_2005_BEFORE
(NUM_5_DAY, IS_KORR, IS_AGENT, SOBSTV, 
 PLAT_ID, PLAT_INN, PLAT_NAME, PLAT_ADDR, DOG_ID, 
 DOG_NUMBER, DOG_DATE, DATE_KVIT, DATE_MOS, DATE_CHN_SOB, 
 NOM_DOK, NOM_SF, ORIG_NOM_SF, OLD_NOM_DOK, OLD_NOM_SF, 
 NPO_SF, DATE_VYP_SF, GR_NPR_ID, GR_NPR_NAME, PROD_ID_NPR, 
 PROD_NAME, PROD_EDIZ, KVIT_ID, VES, VES_KVIT, 
 CNT_KVIT, SVED_NUM, NUM_KVIT, NOM_AKT, NUM_CIST, 
 STANOTP_ID, STAN_NAME, HRAN_ID, HRAN_NAME, POLUCH_ID, 
 POLUCH_NAME, POLUCH_ADDR, IS_SF, CENA_BN, CENA, 
 SUMMA_PROD_BN, SUMMA_PROD_NDS, SUMMA_PROD, SUMMA_AGEN, SUMMA_AGEN_NDS, 
 SUMMA_VOZN_11_BN, SUMMA_VOZN_12_BN, SUMMA_VOZN_BN, SUMMA_TARIF, SUMMA_TARIF_NDS, 
 SUMMA_OHRANA, SUMMA_OHRANA_NDS, TARIF_MPS, TARIF_KVIT, SUMMA_RAZN_BN, 
 NACENKA, SUMMA_STRAH, SUMMA_DOK, SUMMA_DOK_NDS, PRICE_PROTOKOL, 
 KOL_DN, NAZN_OTG_ID, RAST, 
 NUM_STRAH, USL_SUM, VAGOWN_TYP_ID, KORR_PROD, VID_USL_ID)
AS 

SELECT /* ALL_ROWS INDEX(MONTH MONTH_PK) INDEX(STAN STAN_PK) INDEX(PLAT PREDPR_PK) INDEX(POLUCH PREDPR_PK)
                    INDEX(SNP_PLAT PREDPR_PK) INDEX(KLS_VAGOWNER VAGOWNER_PK) INDEX(USL_DOG USL_DOG_PK)
					INDEX(KLS_DOG DOG_PK) INDEX(SNP_DOG DOG_PK) INDEX (KLS_PROD PROD_PK) INDEX(gr_prod PROD_PK)
					INDEX(KLS_VAGOWNER VAGOWNER_PK) */
  TO_NUMBER(TO_CHAR(bills.date_mos,'MM'))*100+bills.NUM_5_DAY as NUM_5_DAY,
  DECODE(TRUNC(bills.DATE_KVIT,'MONTH'),TRUNC(bills.DATE_MOS,'MONTH'),0,TO_NUMBER(TO_CHAR(bills.date_kvit,'MM'))*100+bills.KORR_5_DAY) AS IS_KORR,
  bills.IS_AGENT,
  (CASE
	 WHEN bills.PROD_ID_NPR<'10100' AND bills.PROD_ID_NPR<>'10080' THEN 5
	 ELSE NVL(KV.SOBSTV,1)
   END) AS SOBSTV,
  KLS_DOG.PREDPR_ID AS PLAT_ID,
  PLAT.INN AS PLAT_INN,
  PLAT.SF_NAME AS PLAT_NAME,
  PLAT.CITY_J || ',' || PLAT.ADDRESS_J AS PLAT_ADDR,
  bills.DOG_ID as DOG_ID,
  KLS_DOG.DOG_NUMBER as DOG_NUMBER,
  KLS_DOG.DOG_DATE as DOG_DATE,
  bills.DATE_KVIT,
  bills.DATE_MOS,
  bills.DATE_KVIT AS DATE_CHN_SOB,
  bills.NOM_DOK,
  bills.NOM_SF,
  bills.NOM_SF AS ORIG_NOM_SF,
  NVL(bills.OLD_NOM_DOK,0) as OLD_NOM_DOK,
  Get_Old_sf(bills.NOM_DOK,bills.NOM_SF,bills.OLD_NOM_DOK,bills.OLD_NOM_SF) as OLD_NOM_SF,
  bills.NPO_SF,
  bills.DATE_VYP_SF AS DATE_VYP_SF,
  gr_prod.ID_NPR AS gr_npr_id,
  gr_prod.NAME_NPR AS gr_npr_name,
  KLS_PROD.ID_NPR as PROD_ID_NPR,
  KLS_PROD.SF_NAME AS PROD_NAME,
  KLS_PROD.ED_IZ AS PROD_EDIZ,
  KVIT.ID,
  KV.VES AS VES,
  KVIT.VES_BRUTTO AS VES_KVIT,
  1 as CNT_KVIT,
  KVIT.SVED_NUM,
  KVIT.NUM_KVIT,
  (CASE
	WHEN bills.IS_AGENT=4 THEN TO_CHAR(KVIT.NUM_AKT)
	ELSE ''
   END) AS NOM_AKT,
  DECODE(MONTH.LOAD_ABBR,'—¿Ã',KVIT.NUM_DOVER,KVIT.NUM_CIST) AS NUM_CIST,
  MONTH.STANOTP_ID,
  DECODE(MONTH.LOAD_ABBR,'—¿Ã','—¿ÃŒ¬€¬Œ«',DECODE(STANOTP.ID,1,'–≈«≈–¬”¿–',STANOTP.STAN_NAME)) as STAN_NAME,
  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,POLUCH.ID,8),8) AS HRAN_ID,
  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,POLUCH.PREDPR_NAME,'Œ¿Œ "À” Œ…À-”’“¿Õ≈‘“≈œ≈–≈–¿¡Œ“ ¿"'),'Œ¿Œ "À” Œ…À-”’“¿Õ≈‘“≈œ≈–≈–¿¡Œ“ ¿"') AS HRAN_NAME,
  MONTH.POLUCH_ID,
  POLUCH.PREDPR_NAME AS POLUCH_NAME,
  POLUCH.CITY_P || ',' || POLUCH.ADDRESS_P AS POLUCH_ADDR,
  0 AS IS_SF,
  NVL(KVIT.CENA,0) AS CENA_BN,
  ROUND(NVL(KVIT.CENA,0)*(100+FOR_BILLS.GetNDSValue(bills.date_kvit))/100,2) as CENA,
  NVL(KVIT.SUM_PROD,0) AS SUMMA_PROD_BN,
  NVL(KVIT.SUM_PROD_NDS,0) AS SUMMA_PROD_NDS,
  NVL(KVIT.SUM_PROD_NDS,0)+NVL(KVIT.SUM_PROD,0) AS SUMMA_PROD,
  NVL(KVIT.SUM_VOZN11,0)+NVL(KVIT.SUM_VOZN12,0)+NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0) AS SUMMA_AGEN,
  NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0) AS SUMMA_AGEN_NDS,
  NVL(KVIT.SUM_VOZN11,0) AS SUMMA_VOZN_11_BN,
  NVL(KVIT.SUM_VOZN12,0) AS SUMMA_VOZN_12_BN,
  (CASE
     WHEN NVL(KVIT.sum_vozn11,0)=0 AND NVL(KVIT.sum_vozn12,0)=0 THEN 0
     WHEN NVL(KVIT.sum_vozn11,0)=0 AND NVL(KVIT.sum_vozn12,0)<>0 THEN NVL(KVIT.sum_vozn12,0)-(NVL(KVIT.TARIF_ALT,0)-NVL(KVIT.TARIF,0))
	 ELSE NVL(KVIT.sum_vozn11,0)
   END) as SUMMA_VOZN_BN,
  NVL(KVIT.TARIF,0)+NVL(KVIT.TARIF_NDS,0) AS SUMMA_TARIF,
  NVL(KVIT.TARIF_NDS,0) AS SUMMA_TARIF_NDS,
  NVL(KVIT.TARIF_GUARD,0)+NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_OHRANA,
  NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_OHRANA_NDS,
  NVL(KVIT.TARIF_ALT,0) as TARIF_MPS,
  NVL(KVIT.TARIF,0) AS TARIF_KVIT,
  DECODE(NVL(KVIT.sum_vozn12,0),0,0,NVL(KVIT.TARIF_ALT,0)-NVL(KVIT.TARIF,0)) as SUMMA_RAZN_BN,
  NVL(KVIT.NACENKA,0) as NACENKA,
  NVL(KVIT.SUM_STRAH,0) AS SUMMA_STRAH,
  NVL(KVIT.SUM_PROD_NDS,0)+NVL(KVIT.SUM_PROD,0)+
    NVL(KVIT.SUM_VOZN11,0)+NVL(KVIT.SUM_VOZN12,0)+NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)+
	NVL(KVIT.TARIF,0)+NVL(KVIT.TARIF_NDS,0)+
	NVL(KVIT.TARIF_GUARD,0)+NVL(KVIT.TARIF_GUARD_NDS,0)+
	NVL(KVIT.SUM_STRAH,0) AS SUMMA_DOK,
  NVL(KVIT.SUM_PROD_NDS,0)+
    NVL(KVIT.SUM_VOZN11_NDS,0)+NVL(KVIT.SUM_VOZN12_NDS,0)+
	NVL(KVIT.TARIF_NDS,0)+
	NVL(KVIT.TARIF_GUARD_NDS,0) AS SUMMA_DOK_NDS,
  DECODE(bills.PROD_ID_NPR,'10080',KV.PROTO_NUM,bills.PROTO_NUM) || ' ÓÚ ' || TO_CHAR(DECODE(bills.PROD_ID_NPR,'10080',KV.PROTO_DATE,bills.PROTO_DATE),'dd.mm.yy') || '„.' as PROTO_NUM,
  bills.KOL_DN,
  MONTH.NAZN_OTG_ID,
  STAN.RAST,
  DECODE(NVL(KVIT.SUM_STRAH,0),0,' ',TO_CHAR(bills.NOM_SF-100000)) as NUM_STRAH,
  NVL(DECODE(bills.IS_AGENT,2,USL_DOG.USL_SUM_AREND,USL_DOG.USL_SUM),0) as USL_SUM,
  TO_NUMBER(DECODE(MONTH.LOAD_ABBR,'—¿Ã',NULL,'–≈«',NULL,'“–”',NULL,KLS_VAGOWNER.VAGOWN_TYP_ID)) as VAGOWN_TYP_ID,
  bills.KORR_PROD,
  USL_DOG.VID_USL_ID
FROM bills, V_KVIT_DATE_VIR_ALL kvit, KLS_PREDPR PLAT, KLS_PREDPR POLUCH, KLS_DOG, KLS_PROD, KLS_PROD gr_prod,  MONTH, KLS_STAN STANOTP, KLS_STAN STAN, KLS_DOG SNP_DOG, KLS_PREDPR SNP_PLAT, KLS_PREDPR POTREB, USL_DOG, KLS_VAGOWNER,
  (
   SELECT 
       a.BILL_ID,
	   a.PROD_ID_NPR,
  	   DECODE(a.OWNERSHIP_ID,1,1,3) AS SOBSTV,
	   MAX(a.PROTO_NUM) as PROTO_NUM,
	   MAX(a.PROTO_DATE) as PROTO_DATE,
	   COUNT(*) AS CNT,
	   SUM(VES_BRUTTO) as VES
     FROM V_KVIT_DATE_VIR_ALL a
	WHERE a.DATE_KVIT>=TO_DATE('01.01.2005','dd.mm.yyyy')  
    GROUP BY a.BILL_ID,a.PROD_ID_NPR, DECODE(a.OWNERSHIP_ID,1,1,3) HAVING COUNT(*)<>1
  ) KV
WHERE bills.DATE_KVIT>=TO_DATE('01.01.2005','dd.mm.yyyy')
  AND BILLS.PROD_ID_NPR<>'10041'
  AND BILLS.NOM_DOK = KV.BILL_ID
  AND KV.BILL_ID = KVIT.BILL_ID 
  AND KV.PROD_ID_NPR = KVIT.PROD_ID_NPR 
  AND KV.PROD_ID_NPR = KLS_PROD.ID_NPR
  AND KV.CNT<>1
  AND KLS_PROD.ID_GROUP_NPR = gr_prod.ID_NPR
  AND KVIT.VAGOWNER_ID=KLS_VAGOWNER.ID(+)
  AND KVIT.NOM_ZD = MONTH.NOM_ZD
  AND MONTH.POLUCH_ID = POLUCH.ID
  AND MONTH.STANOTP_ID = STANOTP.ID
  AND MONTH.STAN_ID = STAN.ID
  AND MONTH.POTREB_ID = POTREB.ID (+)
  AND MONTH.DOG_ID=USL_DOG.DOG_ID (+)
  AND MONTH.USL_NUMBER=USL_DOG.USL_NUMBER (+)
  AND MONTH.DOG_ID = KLS_DOG.ID
  AND KLS_DOG.PREDPR_ID = PLAT.ID

UNION ALL
SELECT /*+ INDEX(MONTH MONTH_PK) INDEX(STAN STAN_PK) INDEX(PLAT PREDPR_PK) INDEX(POLUCH PREDPR_PK)
                    INDEX(SNP_PLAT PREDPR_PK) INDEX(KLS_VAGOWNER VAGOWNER_PK) INDEX(USL_DOG USL_DOG_PK)
					INDEX(KLS_DOG DOG_PK) INDEX(SNP_DOG DOG_PK) INDEX (KLS_PROD PROD_PK) INDEX(gr_prod PROD_PK)
					INDEX(KLS_VAGOWNER VAGOWNER_PK) */
  TO_NUMBER(TO_CHAR(v_bills.date_mos,'MM'))*100+v_bills.NUM_5_DAY,
  DECODE(TRUNC(v_bills.DATE_KVIT,'MONTH'),TRUNC(v_bills.DATE_MOS,'MONTH'),0,TO_NUMBER(TO_CHAR(v_bills.date_kvit,'MM'))*100+v_bills.KORR_5_DAY) AS IS_KORR,
  v_bills.IS_AGENT,
  0,
  (CASE
     WHEN KLS_DOG.DOG_NUMBER='01Ã1254' THEN 2
	 WHEN v_bills.PROD_ID_NPR='10001' AND v_bills.DATE_KVIT<TO_DATE('01.01.2004','dd.mm.yyyy') THEN NVL(b_p.SOBSTV,1)
	 WHEN v_bills.PROD_ID_NPR='10001' AND v_bills.DATE_KVIT>=TO_DATE('01.01.2004','dd.mm.yyyy') THEN 5
	 WHEN v_bills.PROD_ID_NPR<'10100' THEN 5
	 ELSE NVL(b_p.SOBSTV,1)
   END) AS SOBSTV,
/*  DECODE(KLS_DOG.DOG_NUMBER,'0210218',SNP_DOG.PREDPR_ID,KLS_DOG.PREDPR_ID) AS PLAT_ID,
  DECODE(KLS_DOG.DOG_NUMBER,'0210218',SNP_PLAT.INN,PLAT.INN) AS PLAT_INN,
  DECODE(KLS_DOG.DOG_NUMBER,'0210218',SNP_PLAT.PREDPR_NAME,PLAT.PREDPR_NAME) AS PLAT_NAME,
  DECODE(KLS_DOG.DOG_NUMBER,'0210218',SNP_PLAT.CITY_J || ',' || SNP_PLAT.ADDRESS_J,PLAT.CITY_J || ',' || PLAT.ADDRESS_J) AS PLAT_ADDR,
  DECODE(KLS_DOG.DOG_NUMBER,'0210218',v_bills.SNP_DOG_ID,v_bills.DOG_ID),
  DECODE(KLS_DOG.DOG_NUMBER,'0210218',SNP_DOG.DOG_NUMBER,KLS_DOG.DOG_NUMBER),
  DECODE(KLS_DOG.DOG_NUMBER,'0210218',SNP_DOG.DOG_DATE,KLS_DOG.DOG_DATE),*/
  KLS_DOG.PREDPR_ID AS PLAT_ID,
  PLAT.INN AS PLAT_INN,
  PLAT.PREDPR_NAME AS PLAT_NAME,
  PLAT.CITY_J || ',' || PLAT.ADDRESS_J AS PLAT_ADDR,
  v_bills.DOG_ID as DOG_ID,
  KLS_DOG.DOG_NUMBER as DOG_NUMBER,
  KLS_DOG.DOG_DATE as DOG_DATE,
  v_bills.DATE_KVIT,
  v_bills.DATE_MOS,
  v_bills.DATE_KVIT,
  v_bills.NOM_DOK,
  v_bills.NOM_SF,
  v_bills.ORIG_NOM_SF,
--  DECODE(SIGN(v_bills.SUMMA_DOK),-1,'',v_bills.OLD_NOM_SF),
  NVL(v_bills.OLD_NOM_DOK,0),
  Get_Old_sf(v_bills.NOM_DOK,v_bills.ORIG_NOM_SF,v_bills.OLD_NOM_DOK,v_bills.OLD_NOM_SF),
  v_bills.NPO_SF,
  v_bills.DATE_VYP_SF,
  NVL(gr_prod.ID_NPR,' ') AS gr_npr_id,
  NVL(gr_prod.NAME_NPR,' ') AS gr_npr_name,
  v_bills.PROD_ID_NPR,
  KLS_PROD.SF_NAME AS PROD_NAME,
  KLS_PROD.ED_IZ,
  NVL(DECODE(KV.CNT,1,KV.ID,0),0),
  NVL(b_p.ves,0),
  NVL(KV.VES,0) AS VES_KVIT,
  NVL(KV.CNT,0),
  NVL(DECODE(KV.CNT,1,KV.SVED_NUM,0),0),
  NVL(DECODE(KV.CNT,1,KV.NUM_KVIT,0),0),
  (CASE
    WHEN v_bills.IS_AGENT=2 AND v_bills.DATE_KVIT<TO_DATE('01.01.2005','dd.mm.yyyy') THEN TO_CHAR(v_bills.ORIG_NOM_SF-6000000)
	WHEN v_bills.IS_AGENT=4 THEN TO_CHAR(kv.NUM_AKT)
	ELSE ''
   END) AS NOM_AKT,
  NVL(DECODE(KV.CNT,1,DECODE(MONTH.LOAD_ABBR,'—¿Ã',KV.NUM_DOVER,KV.NUM_CIST),' '),' '),
  NVL(MONTH.STANOTP_ID,0),
  NVL(DECODE(MONTH.LOAD_ABBR,'—¿Ã','—¿ÃŒ¬€¬Œ«',DECODE(STANOTP.ID,1,'–≈«≈–¬”¿–',STANOTP.STAN_NAME)),' '),
--  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,DECODE(KLS_DOG.DOG_NUMBER,'0210218',SNP_DOG.PREDPR_ID,KLS_DOG.PREDPR_ID),99999),99999) AS HRAN_ID,
--  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,DECODE(KLS_DOG.DOG_NUMBER,'0210218',SNP_PLAT.PREDPR_NAME,PLAT.PREDPR_NAME),' '),' ') AS HRAN_NAME,
  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,POLUCH.ID,8),8) AS HRAN_ID,
  DECODE(MONTH.LOAD_ABBR,'–≈«',DECODE(MONTH.NAZN_OTG_ID,9,POLUCH.PREDPR_NAME,'Œ¿Œ "À” Œ…À-”’“¿Õ≈‘“≈œ≈–≈–¿¡Œ“ ¿"'),'Œ¿Œ "À” Œ…À-”’“¿Õ≈‘“≈œ≈–≈–¿¡Œ“ ¿"') AS HRAN_NAME,
  NVL(MONTH.POLUCH_ID,0),
  NVL(POLUCH.PREDPR_NAME,' '),
  DECODE(NVL(MONTH.POLUCH_ID,0),0,' ',POLUCH.CITY_P || ',' || POLUCH.ADDRESS_P) AS POLUCH_ADDR,
  1 AS IS_SF,
  NVL(b_p.cena_bn,0),
  ROUND(NVL(b_p.cena_bn,0)*(100+FOR_BILLS.GetNDSValue(v_bills.date_kvit))/100,2),
  NVL(b_p.summa_prod_bn,0),
  NVL(b_p.summa_prod_nds,0),
  NVL(b_p.summa_prod,0),
  NVL(b_p.summa_agen,0),
  NVL(b_p.summa_agen_nds,0),
  NVL(b_p.summa_vozn_11_bn,0),
  NVL(b_p.summa_vozn_12_bn,0),
  DECODE(NVL(b_p.summa_vozn_11_bn,0),0,
      DECODE(NVL(b_p.summa_vozn_12_bn,0),0,0,NVL(b_p.summa_vozn_12_bn,0)-(NVL(kv.TARIF_MPS,0)-NVL(kv.TARIF_KVIT,0))),
	  NVL(b_p.summa_vozn_11_bn,0)) as SUMMA_VOZN_BN,
  NVL(b_p.summa_tarif,0),
  NVL(b_p.summa_tarif_nds,0),
  NVL(b_p.summa_ohrana,0),
  NVL(b_p.summa_ohrana_nds,0),
  NVL(kv.TARIF_MPS,0) as TARIF_MPS,
  NVL(kv.TARIF_KVIT,0) as TARIF_KVIT,
  DECODE(NVL(b_p.summa_vozn_12_bn,0),0,0,NVL(kv.TARIF_MPS,0)-NVL(kv.TARIF_KVIT,0)) as SUMMA_RAZN_BN,
  NVL(b_p.NACENKA,0) as NACENKA,
  NVL(b_p.summa_strah,0),
  NVL(b_p.summa_dok,0),
  NVL(b_p.summa_dok_nds,0),
  DECODE(v_bills.PROTO_NUM,NULL,SUBSTR(Get_Price_Protokol_Fast(v_bills.nom_dok,v_bills.PROD_ID_NPR,v_bills.date_kvit,v_bills.orig_dog_id,v_bills.orig_usl_number,v_bills.date_vyp_sf,v_bills.nom_sf,v_bills.old_nom_sf),1,100),v_bills.PROTO_NUM || ' ÓÚ ' || TO_CHAR(v_bills.PROTO_DATE,'dd.mm.yy') || '„.') as PROTO_NUM,
  v_bills.kol_dn,
  MONTH.NAZN_OTG_ID,
  SNP_DOG.PREDPR_ID,
  SNP_PLAT.PREDPR_NAME,
  STAN.RAST,
  DECODE(NVL(b_p.summa_strah,0),0,' ',TO_CHAR(v_bills.ORIG_NOM_SF-6000000)) as NUM_STRAH,
  NVL(DECODE(v_bills.IS_AGENT,2,USL_DOG.USL_SUM_AREND,USL_DOG.USL_SUM),0) as USL_SUM,
  TO_NUMBER(DECODE(MONTH.LOAD_ABBR,'—¿Ã',NULL,'–≈«',NULL,'“–”',NULL,KV.VAGOWN_TYP_ID)) as VAGOWN_TYP_ID,
  v_bills.KORR_PROD,
  strah_info.NOM_SF,
  strah_info.SUMMA_DOK,
  USL_DOG.VID_USL_ID
FROM v_bills, KLS_PREDPR PLAT, KLS_PREDPR POLUCH, KLS_DOG, KLS_PROD, KLS_PROD gr_prod, MONTH, KLS_STAN STANOTP, KLS_STAN STAN,KLS_DOG SNP_DOG, KLS_PREDPR SNP_PLAT, KLS_PREDPR POTREB, USL_DOG,
  (
  SELECT
     v_bill_pos.NOM_DOK,
	 DECODE(SIGN(v_bill_pos.BILL_POS_ID-10),-1,DECODE(v_bill_pos.OWNERSHIP_ID,1,1,3),1) AS SOBSTV,
--     1 AS SOBSTV,
	 MAX(v_bill_pos.NACENKA) as NACENKA,
	 MAX(DECODE(SIGN(v_bill_pos.BILL_POS_ID-10),-1,v_bill_pos.CENA_BN,0)) AS cena_bn,
	 SUM(DECODE(SIGN(v_bill_pos.BILL_POS_ID-10),-1,v_bill_pos.SUMMA-v_bill_pos.SUMMA_NDS20,0)) AS summa_prod_bn,
	 SUM(DECODE(SIGN(v_bill_pos.BILL_POS_ID-10),-1,v_bill_pos.SUMMA_NDS20,0)) AS summa_prod_nds,
	 SUM(DECODE(SIGN(v_bill_pos.BILL_POS_ID-10),-1,v_bill_pos.SUMMA,0)) AS summa_prod,
	 SUM(DECODE(SIGN(v_bill_pos.BILL_POS_ID-10),-1,v_bill_pos.VES,0)) AS ves,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,11,v_bill_pos.SUMMA,12,v_bill_pos.SUMMA,0)) AS summa_agen,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,11,v_bill_pos.SUMMA_NDS20,12,v_bill_pos.SUMMA_NDS20,0)) AS summa_agen_nds,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,11,v_bill_pos.SUMMA-v_bill_pos.SUMMA_NDS20,0)) AS summa_vozn_11_bn,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,11,v_bill_pos.SUMMA,0)) AS summa_vozn_11,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,11,v_bill_pos.SUMMA_NDS20,0)) AS summa_vozn_11_nds,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,12,v_bill_pos.SUMMA-v_bill_pos.SUMMA_NDS20,0)) AS summa_vozn_12_bn,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,12,v_bill_pos.SUMMA,0)) AS summa_vozn_12,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,12,v_bill_pos.SUMMA_NDS20,0)) AS summa_vozn_12_nds,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,10,v_bill_pos.SUMMA,0)) AS summa_tarif,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,10,v_bill_pos.SUMMA_NDS20,0)) AS summa_tarif_nds,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,13,v_bill_pos.SUMMA,0)) AS summa_ohrana,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,13,v_bill_pos.SUMMA_NDS20,0)) AS summa_ohrana_nds,
	 SUM(DECODE(v_bill_pos.BILL_POS_ID,20,v_bill_pos.SUMMA,0)) AS summa_strah,
	 SUM(v_bill_pos.SUMMA_NDS20) AS summa_dok_nds,
	 SUM(v_bill_pos.SUMMA) AS summa_dok
    FROM v_bill_pos
    WHERE summa<>0
	GROUP BY
	  v_bill_pos.NOM_DOK
	  ,DECODE(SIGN(v_bill_pos.BILL_POS_ID-10),-1,DECODE(v_bill_pos.OWNERSHIP_ID,1,1,3),1)
    ) b_p,
  ( /* —Ô‡‚Ó˜Ì‡ˇ ËÌÙÓÏ‡ˆËˇ - Ò˜ÂÚ‡ Ì‡ ÒÚ‡ıÓ‚ÍÛ */
   select /*+  */
     a.nom_dok, -- —‘ Ì‡ ‚ÓÁÌ‡„‡Ê‰ÂÌËÂ ÔÓ ÒÚ‡ıÓ‚ÍÂ
     b.nom_sf, -- —˜ÂÚ Ì‡ ÒÚ‡ıÓ‚ÍÛ
     b.summa_dok
   from bills a /* ¬ÓÁÌ‡„‡Ê‰ÂÌËÂ */ , bills b /* —Ú‡ıÓ‚Í‡ */
   where a.prod_id_npr='10042'
     and b.prod_id_npr='10041'
     and a.dog_id=b.dog_id
     and a.date_kvit=b.date_kvit
  ) strah_info,
  V_LUKREP_KVIT KV
WHERE v_bills.NOM_ZD = MONTH.NOM_ZD(+)
  AND v_bills.DOG_ID = KLS_DOG.ID
  AND KLS_DOG.PREDPR_ID = PLAT.ID
  AND v_bills.SNP_DOG_ID = SNP_DOG.ID
  AND KLS_PROD.ID_GROUP_NPR = gr_prod.ID_NPR (+)
  AND SNP_DOG.PREDPR_ID = SNP_PLAT.ID
  AND MONTH.POLUCH_ID = POLUCH.ID(+)
  AND MONTH.STANOTP_ID = STANOTP.ID(+)
  AND MONTH.STAN_ID = STAN.ID(+)
  AND v_bills.PROD_ID_NPR = KLS_PROD.ID_NPR
  AND v_bills.NOM_DOK = b_p.NOM_DOK(+)
  AND v_bills.DATE_KVIT>=TO_DATE('01.01.2004','dd.mm.yyyy')
  AND v_bills.NOM_DOK=KV.BILL_ID(+)
  AND MONTH.POTREB_ID = POTREB.ID (+)
  AND MONTH.DOG_ID=USL_DOG.DOG_ID (+)
  AND MONTH.USL_NUMBER=USL_DOG.USL_NUMBER (+)
--  AND (v_BILLS.PROD_ID_NPR<>'10001' OR v_BILLS.DATE_KVIT<=TO_DATE('31.12.2003','dd.mm.yyyy'))
  AND v_BILLS.PROD_ID_NPR<>'10041'
  AND v_bills.NOM_DOK=strah_info.nom_dok (+); 